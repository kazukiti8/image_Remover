ドラッグアンドドロップ対応: フォルダ選択ダイアログだけでなく、フォルダをアプリケーションウィンドウに直接ドラッグアンドドロップしてスキャン対象として指定できる機能

状態の自動保存と復元: main_window.py で中断されたスキャンの状態を読み込む機能がありますが、予期せぬ終了（クラッシュなど）の場合にも、可能な範囲で状態を自動保存し、次回起動時に復元を試みるオプション。

進捗表示の具体化: 現在のプログレスバーに加えて、「X個中Y個のファイルを処理中」のような具体的な数値情報を表示

キーボードショートカットの拡充と表示：レビュー画像の削除や外部アプリでの表示にQ, W, A, Sキーが割り当てられていますが、他の主要な操作（スキャン開始、全選択、全解除など）にもショートカットキーを割り当て、メニューやツールチップに表示すると操作性の向上を目指す

結果のフィルタリング/ソート機能強化: 各結果タブで、ファイルサイズ、更新日時、スコアなどの列ヘッダーをクリックしてソートする機能は既にありますが、さらに高度なフィルタリング（例：スコアが特定範囲内のものだけ表示）機能の追加

ズームレベル表示: 現在のズーム倍率を表示

画像の回転機能: プレビュー中の画像を回転できる機能

結果タブ (results_tabs_widget.py):
「重複ペア」タブの明確化: results_tabs_widget.pyでは、「類似/重複ペア」というタブ名で、類似画像と重複画像（類似度100%として表示）をまとめて表示するようになっています。これは合理的ですが、ユーザーが「完全に同じファイルのみ」を素早く見つけたい場合のために、結果リスト内で「完全一致」のペアをより目立たせる（例：専用アイコン、背景色強調など）か、フィルタリングオプションを追加することを検討できます。

選択オプションの追加: 「類似/重複ペア」タブで、ペアの片方だけを選択する、あるいは特定の条件（例：ファイルサイズが小さい方、更新日時が古い方）に基づいて自動で選択する機能があると、大量のペアを処理する際に便利です。現状の「重複選択」ボタンは、右側の画像を全てチェックする挙動のようです。

パフォーマンスと安定性
エラーハンドリングの強化: 各処理において、予期せぬエラーが発生した場合のフォールバック処理や、ユーザーへの分かりやすいエラー通知をさらに充実させることが考えられます。例えば、blur_detection.py や similarity_detection.py では詳細なエラーハンドリングが実装されていますが、これをGUI側でよりユーザーフレンドリーに表示する工夫も考えられます。

リソース消費の最適化: 大量の画像を処理する際のメモリ使用量やCPU負荷について、可能であればプロファイリングを行い、ボトルネックがあれば改善を検討します。

アクセシビリティ: スクリーンリーダーへの対応や、キーボードのみでの操作性の向上など、アクセシビリティへの配慮も重要です。

対象フォルダに直接パスを入力できる機能。スキャン開始時は編集できないようにして、スキャンなどが終了したらまた編集可能なつくり。

キャッシュ機能の変更。設定画面でキャッシュを作成するかを決めれる。キャッシュを作成する際は、スキャン時に対象フォルダ内にキャッシュファイルを作成。画像などを削除した際は自動的にキャッシュに情報を上書きしていく形

全体的なコードのリファクタリング

README.mdの修正

日本語で答えてほしい